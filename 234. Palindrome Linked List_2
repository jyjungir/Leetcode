/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
       ListNode slow = head;
       ListNode fast = head;
       if (head == null) {
           return true;
       }
       // 1. Find the middle node
       while (fast != null && fast.next != null) {
           fast = fast.next.next;
           slow = slow.next;
       }
       if (fast != null) {
           slow = slow.next;
       }
       // 2. Reverse the right part
       ListNode prev = null;
       while (slow != null) {
           ListNode next = slow.next;
           slow.next = prev;
           prev = slow;
           slow = next;
       }
       // 2. Compare
       slow = prev;
       fast = head;
       while (slow != null) {
           if (slow.val != fast.val) {
               return false;
           }
           slow = slow.next;
           fast = fast.next;
       }
        return true;
    }
}
