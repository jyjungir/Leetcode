public class Solution {
    /*
     * @param nums: A set of numbers.
     * @return: A list of lists. All valid subsets.
     */
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
       List<Integer> subset = new ArrayList<Integer> ();
       List<List<Integer>> results = new ArrayList<List<Integer>> ();
       results.add(subset);
       helper(nums, 0, subset, results);
       return results;
    }
    
    private void helper(int[] nums, 
                        int start, 
                        List<Integer> subset,
                        List<List<Integer>> results) {
        if (start >= nums.length) {
            return;
        }
       
        for (int i = start; i < nums.length; i++) {
            if (i != start && nums[i] == nums[i - 1]) {
                continue;
            }
            subset.add(nums[i]);
            results.add(new ArrayList<Integer> (subset));
            helper(nums, i + 1, subset, results);
            subset.remove(subset.size() - 1);
        }                        
    }
}
