/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param root: the root of binary tree
     * @return: the root of the minimum subtree
     */
    int minSum = Integer.MAX_VALUE;
    TreeNode minSubTree = null;

    public TreeNode findSubtree(TreeNode root) {
        helper(root);
        return minSubTree;
    }
    public int helper(TreeNode node) {
        if (node == null) {
            return 0; 
        }
        int sumL = helper(node.left);
        int sumR = helper(node.right);
        int total = sumL + sumR + node.val;
        if (total < minSum) {
            minSum = total;
            minSubTree = node;
        }
        return total;
    }
}
